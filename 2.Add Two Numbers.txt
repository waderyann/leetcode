/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        //Taking the linked list out and adding the numbers
        String a = "";
        String b = "";
        while(l1!=null){   
            a = Integer.toString(l1.val) + a;
            l1= l1.next;
        }
        while(l2!=null){
            b = Integer.toString(l2.val) + b;
            l2 = l2.next;
        }
        String w = Integer.toString(Integer.parseInt(a) + Integer.parseInt(b));
       
        
        //Putting it back into a linked list
        ListNode l3 = new ListNode();
        int y = 0;
        System.out.println(w.length());
        for (int i = w.length() - 1; i > -1; i--){
            System.out.println(l3.val);
            y = Integer.parseInt(Character.toString(w.charAt(i)));
            if (l3 == null){
                l3 = new ListNode(y, null);
            }
            while (l3.next != null){
                l3 = l3.next;
            }
            if (l3.next == null)
            {
                l3.next = new ListNode(y, null);
            }
            //l3.next = new ListNode(y, null);
            
        }
        
        return l3;
    }
    
    
}